"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const userRepository_1 = require("../../infrastructure/database/repositories/userRepository");
const interviewerRepository_1 = require("../../infrastructure/database/repositories/interviewerRepository");
const getAllUsersUseCase_1 = require("../../application/use-cases/admin/getAllUsersUseCase");
const user_controller_1 = require("../controllers/admin/user.controller");
const interviewer_controller_1 = require("../controllers/admin/interviewer.controller");
const roleMiddleware_1 = require("../middleware/roleMiddleware");
const authMiddleware_1 = require("../middleware/authMiddleware");
const blockUserUseCase_1 = require("../../application/use-cases/admin/blockUserUseCase");
const unblockUserUseCase_1 = require("../../application/use-cases/admin/unblockUserUseCase");
const getPendingInterviewersUseCase_1 = require("../../application/use-cases/admin/getPendingInterviewersUseCase");
const approveInterviewerUseCase_1 = require("../../application/use-cases/admin/approveInterviewerUseCase");
const rejectInterviewerUseCase_1 = require("../../application/use-cases/admin/rejectInterviewerUseCase");
const emailService_1 = require("../../infrastructure/external/services/emailService");
const walletRepository_1 = require("../../infrastructure/database/repositories/walletRepository");
const getWalletSummaryUseCase_1 = require("../../application/use-cases/wallet/getWalletSummaryUseCase");
const listWalletTransactionsUseCase_1 = require("../../application/use-cases/wallet/listWalletTransactionsUseCase");
const wallet_controller_1 = require("../controllers/admin/wallet.controller");
const dashboard_controller_1 = require("../controllers/admin/dashboard.controller");
const getAdminDashboardUseCase_1 = require("../../application/use-cases/admin/getAdminDashboardUseCase");
const bookingRepository_1 = require("../../infrastructure/database/repositories/bookingRepository");
const listAdminSessionsUseCase_1 = require("../../application/use-cases/admin/listAdminSessionsUseCase");
const session_controller_1 = require("../controllers/admin/session.controller");
const router = express_1.default.Router();
router.use(authMiddleware_1.authenticateToken);
router.use(roleMiddleware_1.requireAdmin);
const userRepository = new userRepository_1.UserRepository();
const interviewerRepository = new interviewerRepository_1.InterviewerRepository();
const emailService = new emailService_1.EmailService();
const walletRepository = new walletRepository_1.WalletRepository();
const bookingRepository = new bookingRepository_1.BookingRepository();
const getAllUsersUseCase = new getAllUsersUseCase_1.GetAllUsersUseCase(userRepository);
const blockUserUseCase = new blockUserUseCase_1.BlockUserUseCase(userRepository);
const unblockUserUseCase = new unblockUserUseCase_1.UnblockUserUseCase(userRepository);
const adminUserController = new user_controller_1.AdminUserController(getAllUsersUseCase, blockUserUseCase, unblockUserUseCase);
const getPendingInterviewersUseCase = new getPendingInterviewersUseCase_1.GetPendingInterviewersUseCase(userRepository, interviewerRepository);
const approveInterviewerUseCase = new approveInterviewerUseCase_1.ApproveInterviewerUseCase(userRepository, emailService);
const rejectInterviewerUseCase = new rejectInterviewerUseCase_1.RejectInterviewerUseCase(userRepository, emailService);
const adminInterviewerController = new interviewer_controller_1.AdminInterviewerController(getPendingInterviewersUseCase, approveInterviewerUseCase, rejectInterviewerUseCase);
const adminDashboardUseCase = new getAdminDashboardUseCase_1.GetAdminDashboardUseCase(userRepository, bookingRepository, interviewerRepository);
const listAdminSessionsUseCase = new listAdminSessionsUseCase_1.ListAdminSessionsUseCase(bookingRepository, userRepository);
const adminSessionController = new session_controller_1.AdminSessionController(listAdminSessionsUseCase);
const getWalletSummaryUseCase = new getWalletSummaryUseCase_1.GetWalletSummaryUseCase(walletRepository);
const listWalletTransactionsUseCase = new listWalletTransactionsUseCase_1.ListWalletTransactionsUseCase(walletRepository);
const adminWalletController = new wallet_controller_1.AdminWalletController(getWalletSummaryUseCase, listWalletTransactionsUseCase);
const adminDashboardController = new dashboard_controller_1.AdminDashboardController(adminDashboardUseCase);
router.get('/dashboard', (req, res) => adminDashboardController.getDashboard(req, res));
router.get('/users', (req, res) => adminUserController.getAllUsers(req, res));
router.patch('/block/:id', (req, res) => adminUserController.blockUser(req, res));
router.patch('/unblock/:id', (req, res) => adminUserController.unblockUser(req, res));
router.get('/interviewer/pending', (req, res) => adminInterviewerController.getPendingInterviewers(req, res));
router.patch('/interviewer/approve/:id', (req, res) => adminInterviewerController.approveInterviewer(req, res));
router.patch('/interviewer/reject/:id', (req, res) => adminInterviewerController.rejectInterviewer(req, res));
router.get('/wallet/summary', (req, res) => adminWalletController.getSummary(req, res));
router.get('/wallet/transactions', (req, res) => adminWalletController.getTransactions(req, res));
router.get('/sessions', (req, res) => adminSessionController.listSessions(req, res));
exports.default = router;
